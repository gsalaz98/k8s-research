{{- if .Values.monitoring.enable -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
rules:
  - apiGroups: ["", "admissionregistration.k8s.io", "apps", "autoscaling", "batch", "certificates.k8s.io", "coordination.k8s.io", "networking.k8s.io", "policy", "storage.k8s.io"]
    resources: ["*"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: monitoring
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-state-metrics
  namespace: monitoring
  labels:
    cluster-app: kube-state-metrics
spec:
  selector:
    matchLabels:
      cluster-app: kube-state-metrics
  template:
    metadata:
      labels:
        cluster-app: kube-state-metrics
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: kube-state-metrics
      containers:
      - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
        name: kube-state-metrics
        args:
        - --port=8080
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
{{- end }}
